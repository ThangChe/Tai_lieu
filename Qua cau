package QuaCau;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class Solution {
	static int n, res, resMax;
	static int[][] mang, check, dem;
	static int[] dx = { -1, -1, -1 };
	static int[] dy = { -1, 0, 1 };

	static int[] Qx=new int[1000000];
	static int[] Qy=new int[1000000];
	static int f, r;
	static boolean kt,kt1;

	

	public static boolean isSafe(int x, int y) {
		if (x > 0 && x <= n && y > 0 && y <= 5) {
			return true;
		}
		return false;
	}

	public static void main(String[] args) throws FileNotFoundException {
		// TODO Auto-generated method stub
		System.setIn(new FileInputStream("QuaCau.txt"));
		Scanner sc = new Scanner(System.in);
		int sbt = sc.nextInt();
		for (int tc = 1; tc <= sbt; tc++) {
			n = sc.nextInt();
			mang = new int[n + 2][6];
			check = new int[n + 2][6];
			dem = new int[n + 2][6];
			f = -1;
			r = -1;
			for (int i = 1; i <= n; i++) {
				for (int j = 1; j <= 5; j++) {
					mang[i][j] = sc.nextInt();
				}
			}
			//check[1][3] = 1;
			resMax = 0;
			kt = false;
			kt1=false;
			backtrack(n+1, 3, 0);
			int kq = 0;
			if(kt1 == false){
				kq=-1;
			}else{
				kq=resMax;
			}
			System.out.println("#"+tc+" "+kq);
		}
	}

	private static void backtrack(int x, int y, int count) {
		// TODO Auto-generated method stub
		if (x == 1) {
			kt1=true;
			if (resMax < count) {
				resMax = count;
//				return;
			}
		}
		for (int i = 0; i < 3; i++) {
			int aa = x + dx[i];
			int bb = y + dy[i];
			if (isSafe(aa, bb) && check[aa][bb] == 0) {
				if (mang[aa][bb] == 0) {
					check[aa][bb] = 1;
					backtrack(aa, bb, count);
					check[aa][bb] = 0;
				} else if (mang[aa][bb] == 1) {
					count++;
					check[aa][bb] = 1;
					backtrack(aa, bb, count);
					count--;
					check[aa][bb] = 0;
				} else if (mang[aa][bb] == 2 && kt == false) {
					check[aa][bb] = 1;
					kt = true;
					backtrack(aa, bb, count);
					kt = false;
					check[aa][bb] = 0;
				}
			}
		}

	}

}
